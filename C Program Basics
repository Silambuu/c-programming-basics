C programming basics:
--------------------------------------------------------------------------------
| Data types |

1:Built in primitives 
  *Integer---> *Int , *Char
  *Boolean 
  *Floating point---> *Float , *Double 

2:Derived 
  *Array
  *Pointers

3:User defined 
  *Structure
  *Enumunation
  *Union
----------------------------------------------------------------------------------
| Operators in C |

 *Arithmetic Operators
 *Assignment Operators
 *Relatitonal Operators
 *Logical Operators
 *Bitwise Operators
 *Increment and Decrement Operators
 *sizeof Operator

------------------------------------------------------------------------------------

--> Arithmetic operators 
     * (mul) , / (div) , % (mod) ------> Higher precidency 
     + (sum) , - (sub) ,

example prog:
  #include <stdio.h>
  int main()
{
    int a,b,c;
    printf("\nEnter 2 nos :");
    scanf("%d%d",&a,&b);
    c=a+b;
    printf("\nTotal : %d",c);
    c=a-b;
    printf("\nDifference : %d",c);
    c=a*b;
    printf("\nMul : %d",c);
    c=a/b;
    printf("\nDiv : %d",c);
    c=a%b;
    printf("\nMod : %d",c);

    return 0;
}
-----output:
   Enter 2 nos :100
23

Total : 123
Difference : 77
Mul : 2300
Div : 4
Mod : 8
------------------------------------------------------------------------------------
--> Assignment operators 

operator      example      sameas 
   =           a = b        a = b
   +=          a += b       a = a+b
   -=          a -= b       a = a-b
   *=          a *= b       a = a*b
   /=          a /= b       a = a/b
   %=          a %= b       a = a%b

example program:
  #include<stdio.h>
  int main()
{
    int a=10,b=5;
    a+=b;  //a=a+5
    printf("A : %d",a);
    a-=b;
    printf("\nA : %d",a);
    a*=b;
    printf("\nA : %d",a);
    a/=b;
    printf("\nA : %d",a);
    a%=b;
    printf("\nA : %d",a);
    return 0;
}
---- OUTPUT ----
A : 15
A : 10
A : 50
A : 10
A : 0
------------------------------------------------------------------------------------
--> Relational operators

Operators   Meaning of operator
 ==           Equal to
 !=           Not equal to
 >            Greater than
 <            Lesser than
 >=           Greater than equal to 
 <=           lesser than equal to

example program:
  #include<stdio.h>
  int main()
{
    int a=10,b=5;
    printf("\nGreater than          : %d",a>b);
    printf("\nLesser than           : %d",a<b);
    printf("\nGreater than equal to : %d",a>=b);
    printf("\nLesser than equal to  : %d",a>=b);
    return 0;
}
---- OUTPUT ----
Greater than          : 1
Lesser than           : 0
Greater than equal to : 1
Lesser than equal to  : 1
------------------------------------------------------------------------------------
--> Logical operators

Operator                         Meaning
  &&            Logical AND. True only if all operands are true 
  ||            Logical OR. True only if either one operand is true
  !             Logical NOT. True only if the operand is 0 

example program:
   #include<stdio.h>
   int main()
{
    int a=80;
    printf("\nLogical And  : %d",(a>=35 && a<=100));
    printf("\nLogical OR   : %d",(a>=35 || a<=100));
    printf("\nLogical NOT  : %d",!(a>=35));
    return 0;
}
---- OUTPUT ----
Logical And  : 1
Logical OR   : 1
Logical NOT  : 0
------------------------------------------------------------------------------------
--> Increment and Decrement Operators 

Operator     Meaning 
  ++        Increment(++a,a++)
  --        Decrement(--a,a--)

example program:
   #include<stdio.h>
   int main()
{
    int a=1;
    printf("\nPre Increment : %d",++a);
    printf("\nPost Increment : %d",a++);
    printf("\nA : %d",a);
    printf("\nPre Decrement : %d",--a);
    printf("\nPost Decrement : %d",a--);
    printf("\nA : %d",a);

    return 0;
}
---- OUTPUT ----
Pre Increment : 2
Post Increment : 2
A : 3
Pre Decrement : 2
Post Decrement : 2
A : 1
------------------------------------------------------------------------------------
--> Bitwise Operators

 Symbol    Name 
   &       AND
   |       OR
   ~       NOT
   ^       XOR
  <<      Shift Left 
  >>      Shift Right

example program:
  #include<stdio.h>
  int main()
{
    int a=10,b=11,c;
    printf("\nBitwise AND : %d",a&b);
    printf("\nBitwise OR  : %d",a|b);
    printf("\nBitwise XOR : %d",a^b);
    printf("\nBitwise NOT : %d",~a);
    a=16;
    b=a<<2;
    c=a>>2;
    printf("\n Left Shift  : %d",b);
    printf("\n Right Shift : %d",c);
    return 0;
}
---- OUTPUT ----
Bitwise AND : 10
Bitwise OR  : 11
Bitwise XOR : 1
Bitwise NOT : -11
 Left Shift  : 64
 Right Shift : 4
------------------------------------------------------------------------------------
| CONTROL STATEMENT |

 *If Statement
--> if 
--> if else 
--> else if ladder 
--> nested if 

*Switch Statement 

*Conditional Operator Statement

*Loop Statement
--> for loop
--> while loop
--> do while loop

*goto Statement


***If statement***

Syntax:
 if(condition)
 {
   statement:
 }

**sample program**
  int main()
{
    char name[10];
    int age;
    printf("\nEnter your name :");
    scanf("%s",&name);
    printf("\nEnter your age :");
    scanf("%d",&age);
    if(age>=18)
    {
        printf("\n %s age is %d eligilble for vote",name,age);
    }
    return 0;
}
---- OUTPUT ----
Enter your name :sim
Enter your age :20
 sim age is 20 eligilble for vote


***if else statement***

Syntax:
if(condition)
 {
   statement:
 }
else
{
  statement;
}

**sample program**
   int main()
{
    char name[10];
    int age;
    printf("\nEnter your name :");
    scanf("%s",&name);
    printf("\nEnter your age :");
    scanf("%d",&age);
    if(age>=18)
    {
        printf("\n %s age is %d eligilble for vote",name,age);
    }
    else
    {
        printf("\n %s age is %d not eligilble for vote",name,age);
    }
    return 0;
}
---- OUTPUT ----
Enter your name :sim
Enter your age :17
 sim age is 17 not eligilble for vote
Enter your name :ram
Enter your age :20
 ram age is 20 eligilble for vote


***else if statement***

Syntax:
if(condition)
 {
   statement:
 }
else if(condition)
{
  statement;
}
else
{
  statement;
}

**sample program**
  int main()
{
    int a;
    printf("\nEnter value of A :");
    scanf("%d",&a);
    if(a<0)
    {
        printf("\n%d is negative num",a);
    }
    else if(a==0)
    {
        printf("\nThe given num is 0");
    }
    else if(a>0)
    {
        printf("\n%d is positive num",a);
    }
    return 0;
}
---- OUTPUT ----
Enter value of A :11
11 is positive num
Enter value of A :-23
-23 is negative num


***nested if statement***

Syntax:
if(condition)
{
  if(condition)
   {
      statement:
   }
}

**sample program**
  int main()
{
int year;
    printf("\nEnter the year :");
    scanf("%d",&year);
    if(year%100==0)
    {
        if(year%400==0)
        {
            printf("%d is leap year",year);
        }
        else
        {
            printf("\n%d is not leap year",year);
        }
    }
    else
    {
        if(year%4==0)
        {
            printf("%d is leap year",year);
        }
        else
        {
            printf("\n%d is not leap year",year);
        }
    }
    return 0;
}
---- OUTPUT ----
Enter the year :2035
2035 is not leap year
Enter the year :2000
2000 is leap year 


***switch statement***

Syntax:
switch(choice)
{
  case value:
   ..........
       break;
 case value:
   ..........
       break;
 default:
   ......
   break;
}

**sample program**
  int main()
{
    int ch;
    printf("\nEnter the value : ");
    scanf("%d",&ch);
    switch(ch)
    {
    case 1:
        printf("One");
        break;
    case 2:
        printf("Two");
        break;
    case 3:
        printf("Three");
        break;
    default:
        printf("Invalid number");
    }
    return 0;
}
---- OUTPUT ----
Enter the value : 3
Three
Enter the value : 0
Invalid number


***conditional operator statement***

Syntax:
 condition?true-statement:false-statement;

**sample program**
  


    




